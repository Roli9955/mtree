#!/bin/bash
#
# Removes all M-tree specific files from PostgreSQL.

set -e

readonly NUMBER_OF_ARGUMENTS="$#"
readonly POSTGRESQL_DIRECTORY="$1"

#######################################
# Prints echo command to stdout with green color and timestamp.
# Arguments:
#   Message.
#######################################
function print_info() {
  echo -e "\033[0;32m[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*\033[0m" >&1
  echo -e "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >> uninstall-mtree.log
}

#######################################
# Redirects stdout from echo command to stderr with red color and timestamp.
# Arguments:
#   Error message.
#######################################
function print_error() {
  echo -e "\033[0;31m[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*\033[0m" >&2
  echo -e "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: ERROR: $*" >> uninstall-mtree.log
}

#######################################
# Checks if a directory exists.
# Arguments:
#   Directory path.
#######################################
function check_directory() {
  if [ ! -d "$1" ]; then
    print_error "Directory DOES NOT exists: $1"
    exit 1
  fi
}

#######################################
# Validates the command line arguments.
# Arguments:
#   None
#######################################
function validate_arguments() {
  if [ "${NUMBER_OF_ARGUMENTS}" -ne 1 ]; then
    print_error "Invalid number of arguments (1 REQUIRED)."
    exit 1
  fi
  check_directory "${POSTGRESQL_DIRECTORY}"
  print_info "Argument is valid!"
}

#######################################
# Deletes all files.
# Arguments:
#   None
#######################################
function uninstall_all() {
  for i in {1..8}
  do
    rm "${POSTGRESQL_DIRECTORY}/share/extension/mtree${i}.control"
    rm "${POSTGRESQL_DIRECTORY}/share/extension/mtree${i}--1.0.sql"
    rm "${POSTGRESQL_DIRECTORY}/lib/mtree${i}.so"
  done;
  print_info "Successfully uninstalled the M-tree index extension!"
  rm "${POSTGRESQL_DIRECTORY}/data/1000.csv"
  rm "${POSTGRESQL_DIRECTORY}/data/measure.sql"
}

validate_arguments
uninstall_all
