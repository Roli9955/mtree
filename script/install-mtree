#!/bin/bash
#
# Installs the M-tree index extension to PostgreSQL.

set -e

readonly NUMBER_OF_ARGUMENTS="$#"
readonly SOURCE_DIRECTORY="$1"
readonly POSTGRESQL_DIRECTORY="$2"

#######################################
# Prints echo command to stdout with green color and timestamp.
# Arguments:
#   Message.
#######################################
function print_info() {
  echo -e "\033[0;32m[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*\033[0m" >&1
  echo -e "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >> install-mtree.log
}

#######################################
# Redirects stdout from echo command to stderr with red color and timestamp.
# Arguments:
#   Error message.
#######################################
function print_error() {
  echo -e "\033[0;31m[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*\033[0m" >&2
  echo -e "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: ERROR: $*" >> install-mtree.log
}

#######################################
# Checks if a directory exists.
# Arguments:
#   Directory path.
#######################################
function check_directory() {
  if [ ! -d "$1" ]; then
    print_error "Directory DOES NOT exists: $1"
    exit 1
  fi
}

#######################################
# Validates the command line arguments.
# Arguments:
#   None
#######################################
function validate_arguments() {
  if [ "${NUMBER_OF_ARGUMENTS}" -ne 2 ]; then
    print_error "Invalid number of arguments (2 REQUIRED)."
    exit 1
  fi
  check_directory "${SOURCE_DIRECTORY}"
  check_directory "${POSTGRESQL_DIRECTORY}"
  print_info "Arguments are valid!"
}

#######################################
# Installs the control file to the PostgreSQL directory.
# Arguments:
#   Picksplit strategy.
#   Index.
#######################################
function install_control_file() {
  cp "${SOURCE_DIRECTORY}/mtree.control" "${SOURCE_DIRECTORY}/mtree_tmp.control"
  sed -i 's,%picksplitStrategy%,'"$1"',g' "${SOURCE_DIRECTORY}/mtree_tmp.control"
  sed -i 's,%i%,'"$2"',g' "${SOURCE_DIRECTORY}/mtree_tmp.control"
  sed -i 's,%libdir%,'"${POSTGRESQL_DIRECTORY}/lib"',g' "${SOURCE_DIRECTORY}/mtree_tmp.control"
  cp "${SOURCE_DIRECTORY}/mtree_tmp.control" "${POSTGRESQL_DIRECTORY}/share/extension/mtree$2.control"
  rm "${SOURCE_DIRECTORY}/mtree_tmp.control"
}

#######################################
# Installs the SQL script to the PostgreSQL directory.
# Arguments:
#   Index.
#######################################
function install_sql_script() {
  cp "${SOURCE_DIRECTORY}/mtree.sql" "${SOURCE_DIRECTORY}/mtree_tmp.sql"
  sed -i 's,%index%,'"$1"',g' "${SOURCE_DIRECTORY}/mtree_tmp.sql"
  cp "${SOURCE_DIRECTORY}/mtree_tmp.sql" "${POSTGRESQL_DIRECTORY}/share/extension/mtree$1--1.0.sql"
  rm "${SOURCE_DIRECTORY}/mtree_tmp.sql"
}

#######################################
# Creates and installs the shared library to the PostgreSQL directory.
# Arguments:
#   Picksplit strategy.
#   Index.
#######################################
function install_shared_library() {
  cp "${SOURCE_DIRECTORY}/mtree.c" "${SOURCE_DIRECTORY}/mtree_tmp.c"
  sed -i 's,%picksplitStrategy%,'"$1"',g' "${SOURCE_DIRECTORY}/mtree_tmp.c"
  cc -fPIC -c -I "${POSTGRESQL_DIRECTORY}/include/server" "${SOURCE_DIRECTORY}/mtree_tmp.c" -o "${SOURCE_DIRECTORY}/mtree.o"
  cc -shared -o "${SOURCE_DIRECTORY}/mtree.so" "${SOURCE_DIRECTORY}/mtree.o"
  cp "${SOURCE_DIRECTORY}/mtree.so" "${POSTGRESQL_DIRECTORY}/lib/mtree$2.so"
  rm "${SOURCE_DIRECTORY}/mtree_tmp.c"
  rm "${SOURCE_DIRECTORY}/mtree.o"
  rm "${SOURCE_DIRECTORY}/mtree.so"
}

#######################################
# Installs a picksplit strategy.
# Arguments:
#   Picksplit strategy.
#   Index.
#######################################
function install_strategy() {
  print_info "Installing M-tree index extension with picksplit strategy #$2 - $1"
  install_control_file "$1" "$2"
  install_sql_script "$2"
  install_shared_library "$1" "$2"
  print_info "Successfully installed M-tree index extension with picksplit strategy #$2 - $1"
}

#######################################
# Installs M-tree index with all picksplit strategies.
# Arguments:
#   None
#######################################
function install_all_strategies() {
  local PICKSPLIT_STRATEGIES=(
    Random
    FirstTwo
    MaxDistanceFromFirst
    MaxDistancePair
    SamplingMinCoveringSum
    SamplingMinCoveringMax
    SamplingMinOverlapArea
    SamplingMinAreaSum
  )
  local i=1
  for strategy in "${PICKSPLIT_STRATEGIES[@]}"
  do
    install_strategy "${strategy}" "${i}"
    i=$((i+1))
  done;
}

#######################################
# Copies data files.
# Arguments:
#   None
#######################################
function copy_data_files() {
  cp "${SOURCE_DIRECTORY}/../data/1000.csv" "${POSTGRESQL_DIRECTORY}/data/1000.csv"
  cp "${SOURCE_DIRECTORY}/../data/measure.sql" "${SOURCE_DIRECTORY}/../data/measure_tmp.sql"
  sed -i 's,%datacsv%,'"${POSTGRESQL_DIRECTORY}/data/1000.csv"',g' "${SOURCE_DIRECTORY}/../data/measure_tmp.sql"
  cp "${SOURCE_DIRECTORY}/../data/measure_tmp.sql" "${POSTGRESQL_DIRECTORY}/data/measure.sql"
  rm "${SOURCE_DIRECTORY}/../data/measure_tmp.sql"
}

validate_arguments
install_all_strategies
copy_data_files
